   0  $accept : program $end

   1  program : decl_and_def_list

   2  decl_and_def_list : declaration_list decl_and_def_list
   3                    | definition_list decl_and_def_list_mustdef

   4  decl_and_def_list_mustdef : declaration_list decl_and_def_list_mustdef
   5                            | definition_list decl_and_def_list_mustdef
   6                            |

   7  declaration_list : const_decl
   8                   | var_decl
   9                   | funct_decl

  10  definition_list : funct_defi

  11  var_decl : scalar_type identifier_list SEMICOLON

  12  scalar_type : INT
  13              | FLOAT
  14              | BOOL
  15              | DOUBLE
  16              | STRING

  17  identifier : ID
  18             | ID array_int

  19  array_int : '[' INTEGER ']'
  20            | '[' INTEGER ']' array_int

  21  identifier_list : identifier_list ',' identifier
  22                  | identifier
  23                  | identifier_list ',' ID '=' expression
  24                  | ID '=' expression
  25                  | identifier_list ',' ID array_int '=' initial_array
  26                  | ID array_int '=' initial_array

  27  initial_array : '{' expression_list '}'

  28  const_decl : CONST scalar_type const_list SEMICOLON

  29  const_list : ID '=' literal_const ',' const_list
  30             | ID '=' literal_const

  31  literal_const : INTEGER
  32                | FLOATCONST
  33                | STRINGCONST
  34                | SCIENTIFIC
  35                | TRUE
  36                | FALSE

  37  funct_decl : scalar_type ID '(' arguments ')' SEMICOLON
  38             | VOID ID '(' arguments ')' SEMICOLON

  39  funct_defi : scalar_type ID '(' arguments ')' compound
  40             | VOID ID '(' arguments ')' compound

  41  arguments : nonempty_arguments
  42            |

  43  nonempty_arguments : nonempty_arguments ',' argument
  44                     | argument

  45  argument : scalar_type identifier

  46  statement : compound
  47            | simple
  48            | conditional
  49            | while
  50            | for
  51            | jump
  52            | procedure_call

  53  compound : '{' compound_list '}'

  54  compound_list : var_decl compound_list
  55                | const_decl compound_list
  56                | statement compound_list
  57                |

  58  simple : ID array_expre '=' expression SEMICOLON
  59         | PRINT expression SEMICOLON
  60         | READ ID array_expre

  61  array_expre : array_expre '[' expression ']'
  62              |

  63  expression : expression_component
  64             | expression '-' expression
  65             | expression '*' expression
  66             | expression '/' expression
  67             | expression '%' expression
  68             | expression '+' expression
  69             | expression AND expression
  70             | expression OR expression
  71             | expression '<' expression
  72             | expression '>' expression
  73             | expression LE expression
  74             | expression EQ expression
  75             | expression GE expression
  76             | expression NE expression
  77             | '(' expression ')'
  78             | '!' expression
  79             | '-' expression

  80  expression_component : literal_const
  81                       | ID array_expre
  82                       | funciton_invocation

  83  conditional : IF '(' boolean_expression ')' compound ELSE compound
  84              | IF '(' boolean_expression ')' compound

  85  while : WHILE '(' boolean_expression ')' compound
  86        | DO compound WHILE '(' boolean_expression ')' SEMICOLON

  87  boolean_expression : expression

  88  for : FOR '(' initial_expression SEMICOLON control_expression SEMICOLON increment_expression ')'

  89  initial_expression : ID '=' expression
  90                     | scalar_type ID '=' expression
  91                     |

  92  control_expression : expression
  93                     |

  94  increment_expression : ID '=' expression
  95                       |

  96  jump : RETURN expression SEMICOLON
  97       | BREAK SEMICOLON
  98       | CONTINUE SEMICOLON

  99  procedure_call : funciton_invocation

 100  funciton_invocation : ID '(' expression_list ')' SEMICOLON

 101  expression_list : expression_list ',' expression
 102                  | expression
 103                  |

state 0
	$accept : . program $end  (0)

	CONST  shift 1
	BOOL  shift 2
	VOID  shift 3
	FLOAT  shift 4
	DOUBLE  shift 5
	STRING  shift 6
	INT  shift 7
	.  error

	program  goto 8
	decl_and_def_list  goto 9
	declaration_list  goto 10
	definition_list  goto 11
	const_decl  goto 12
	var_decl  goto 13
	funct_decl  goto 14
	funct_defi  goto 15
	scalar_type  goto 16


state 1
	const_decl : CONST . scalar_type const_list SEMICOLON  (28)

	BOOL  shift 2
	FLOAT  shift 4
	DOUBLE  shift 5
	STRING  shift 6
	INT  shift 7
	.  error

	scalar_type  goto 17


state 2
	scalar_type : BOOL .  (14)

	.  reduce 14


state 3
	funct_decl : VOID . ID '(' arguments ')' SEMICOLON  (38)
	funct_defi : VOID . ID '(' arguments ')' compound  (40)

	ID  shift 18
	.  error


state 4
	scalar_type : FLOAT .  (13)

	.  reduce 13


state 5
	scalar_type : DOUBLE .  (15)

	.  reduce 15


state 6
	scalar_type : STRING .  (16)

	.  reduce 16


state 7
	scalar_type : INT .  (12)

	.  reduce 12


state 8
	$accept : program . $end  (0)

	$end  accept


state 9
	program : decl_and_def_list .  (1)

	.  reduce 1


state 10
	decl_and_def_list : declaration_list . decl_and_def_list  (2)

	CONST  shift 1
	BOOL  shift 2
	VOID  shift 3
	FLOAT  shift 4
	DOUBLE  shift 5
	STRING  shift 6
	INT  shift 7
	.  error

	decl_and_def_list  goto 19
	declaration_list  goto 10
	definition_list  goto 11
	const_decl  goto 12
	var_decl  goto 13
	funct_decl  goto 14
	funct_defi  goto 15
	scalar_type  goto 16


state 11
	decl_and_def_list : definition_list . decl_and_def_list_mustdef  (3)
	decl_and_def_list_mustdef : .  (6)

	CONST  shift 1
	BOOL  shift 2
	VOID  shift 3
	FLOAT  shift 4
	DOUBLE  shift 5
	STRING  shift 6
	INT  shift 7
	$end  reduce 6

	declaration_list  goto 20
	definition_list  goto 21
	decl_and_def_list_mustdef  goto 22
	const_decl  goto 12
	var_decl  goto 13
	funct_decl  goto 14
	funct_defi  goto 15
	scalar_type  goto 16


state 12
	declaration_list : const_decl .  (7)

	.  reduce 7


state 13
	declaration_list : var_decl .  (8)

	.  reduce 8


state 14
	declaration_list : funct_decl .  (9)

	.  reduce 9


state 15
	definition_list : funct_defi .  (10)

	.  reduce 10


state 16
	var_decl : scalar_type . identifier_list SEMICOLON  (11)
	funct_decl : scalar_type . ID '(' arguments ')' SEMICOLON  (37)
	funct_defi : scalar_type . ID '(' arguments ')' compound  (39)

	ID  shift 23
	.  error

	identifier_list  goto 24
	identifier  goto 25


state 17
	const_decl : CONST scalar_type . const_list SEMICOLON  (28)

	ID  shift 26
	.  error

	const_list  goto 27


state 18
	funct_decl : VOID ID . '(' arguments ')' SEMICOLON  (38)
	funct_defi : VOID ID . '(' arguments ')' compound  (40)

	'('  shift 28
	.  error


state 19
	decl_and_def_list : declaration_list decl_and_def_list .  (2)

	.  reduce 2


state 20
	decl_and_def_list_mustdef : declaration_list . decl_and_def_list_mustdef  (4)
	decl_and_def_list_mustdef : .  (6)

	CONST  shift 1
	BOOL  shift 2
	VOID  shift 3
	FLOAT  shift 4
	DOUBLE  shift 5
	STRING  shift 6
	INT  shift 7
	$end  reduce 6

	declaration_list  goto 20
	definition_list  goto 21
	decl_and_def_list_mustdef  goto 29
	const_decl  goto 12
	var_decl  goto 13
	funct_decl  goto 14
	funct_defi  goto 15
	scalar_type  goto 16


state 21
	decl_and_def_list_mustdef : definition_list . decl_and_def_list_mustdef  (5)
	decl_and_def_list_mustdef : .  (6)

	CONST  shift 1
	BOOL  shift 2
	VOID  shift 3
	FLOAT  shift 4
	DOUBLE  shift 5
	STRING  shift 6
	INT  shift 7
	$end  reduce 6

	declaration_list  goto 20
	definition_list  goto 21
	decl_and_def_list_mustdef  goto 30
	const_decl  goto 12
	var_decl  goto 13
	funct_decl  goto 14
	funct_defi  goto 15
	scalar_type  goto 16


state 22
	decl_and_def_list : definition_list decl_and_def_list_mustdef .  (3)

	.  reduce 3


state 23
	identifier : ID .  (17)
	identifier : ID . array_int  (18)
	identifier_list : ID . '=' expression  (24)
	identifier_list : ID . array_int '=' initial_array  (26)
	funct_decl : scalar_type ID . '(' arguments ')' SEMICOLON  (37)
	funct_defi : scalar_type ID . '(' arguments ')' compound  (39)

	'['  shift 31
	'='  shift 32
	'('  shift 33
	SEMICOLON  reduce 17
	','  reduce 17

	array_int  goto 34


state 24
	var_decl : scalar_type identifier_list . SEMICOLON  (11)
	identifier_list : identifier_list . ',' identifier  (21)
	identifier_list : identifier_list . ',' ID '=' expression  (23)
	identifier_list : identifier_list . ',' ID array_int '=' initial_array  (25)

	SEMICOLON  shift 35
	','  shift 36
	.  error


state 25
	identifier_list : identifier .  (22)

	.  reduce 22


state 26
	const_list : ID . '=' literal_const ',' const_list  (29)
	const_list : ID . '=' literal_const  (30)

	'='  shift 37
	.  error


state 27
	const_decl : CONST scalar_type const_list . SEMICOLON  (28)

	SEMICOLON  shift 38
	.  error


state 28
	funct_decl : VOID ID '(' . arguments ')' SEMICOLON  (38)
	funct_defi : VOID ID '(' . arguments ')' compound  (40)
	arguments : .  (42)

	BOOL  shift 2
	FLOAT  shift 4
	DOUBLE  shift 5
	STRING  shift 6
	INT  shift 7
	')'  reduce 42

	scalar_type  goto 39
	arguments  goto 40
	nonempty_arguments  goto 41
	argument  goto 42


state 29
	decl_and_def_list_mustdef : declaration_list decl_and_def_list_mustdef .  (4)

	.  reduce 4


state 30
	decl_and_def_list_mustdef : definition_list decl_and_def_list_mustdef .  (5)

	.  reduce 5


state 31
	array_int : '[' . INTEGER ']'  (19)
	array_int : '[' . INTEGER ']' array_int  (20)

	INTEGER  shift 43
	.  error


state 32
	identifier_list : ID '=' . expression  (24)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 54
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 33
	funct_decl : scalar_type ID '(' . arguments ')' SEMICOLON  (37)
	funct_defi : scalar_type ID '(' . arguments ')' compound  (39)
	arguments : .  (42)

	BOOL  shift 2
	FLOAT  shift 4
	DOUBLE  shift 5
	STRING  shift 6
	INT  shift 7
	')'  reduce 42

	scalar_type  goto 39
	arguments  goto 58
	nonempty_arguments  goto 41
	argument  goto 42


state 34
	identifier : ID array_int .  (18)
	identifier_list : ID array_int . '=' initial_array  (26)

	'='  shift 59
	SEMICOLON  reduce 18
	','  reduce 18


state 35
	var_decl : scalar_type identifier_list SEMICOLON .  (11)

	.  reduce 11


state 36
	identifier_list : identifier_list ',' . identifier  (21)
	identifier_list : identifier_list ',' . ID '=' expression  (23)
	identifier_list : identifier_list ',' . ID array_int '=' initial_array  (25)

	ID  shift 60
	.  error

	identifier  goto 61


state 37
	const_list : ID '=' . literal_const ',' const_list  (29)
	const_list : ID '=' . literal_const  (30)

	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	.  error

	literal_const  goto 62


state 38
	const_decl : CONST scalar_type const_list SEMICOLON .  (28)

	.  reduce 28


state 39
	argument : scalar_type . identifier  (45)

	ID  shift 63
	.  error

	identifier  goto 64


state 40
	funct_decl : VOID ID '(' arguments . ')' SEMICOLON  (38)
	funct_defi : VOID ID '(' arguments . ')' compound  (40)

	')'  shift 65
	.  error


state 41
	arguments : nonempty_arguments .  (41)
	nonempty_arguments : nonempty_arguments . ',' argument  (43)

	','  shift 66
	')'  reduce 41


state 42
	nonempty_arguments : argument .  (44)

	.  reduce 44


state 43
	array_int : '[' INTEGER . ']'  (19)
	array_int : '[' INTEGER . ']' array_int  (20)

	']'  shift 67
	.  error


state 44
	expression_component : ID . array_expre  (81)
	funciton_invocation : ID . '(' expression_list ')' SEMICOLON  (100)
	array_expre : .  (62)

	'('  shift 68
	SEMICOLON  reduce 62
	'*'  reduce 62
	'/'  reduce 62
	'%'  reduce 62
	'+'  reduce 62
	'-'  reduce 62
	'<'  reduce 62
	'>'  reduce 62
	LE  reduce 62
	EQ  reduce 62
	GE  reduce 62
	NE  reduce 62
	AND  reduce 62
	OR  reduce 62
	'['  reduce 62
	']'  reduce 62
	','  reduce 62
	'}'  reduce 62
	')'  reduce 62

	array_expre  goto 69


state 45
	literal_const : SCIENTIFIC .  (34)

	.  reduce 34


state 46
	literal_const : INTEGER .  (31)

	.  reduce 31


state 47
	literal_const : FLOATCONST .  (32)

	.  reduce 32


state 48
	literal_const : STRINGCONST .  (33)

	.  reduce 33


state 49
	literal_const : TRUE .  (35)

	.  reduce 35


state 50
	literal_const : FALSE .  (36)

	.  reduce 36


state 51
	expression : '-' . expression  (79)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 70
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 52
	expression : '!' . expression  (78)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 71
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 53
	expression : '(' . expression ')'  (77)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 72
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 54
	identifier_list : ID '=' expression .  (24)
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)

	'*'  shift 73
	'/'  shift 74
	'%'  shift 75
	'+'  shift 76
	'-'  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	EQ  shift 81
	GE  shift 82
	NE  shift 83
	AND  shift 84
	OR  shift 85
	SEMICOLON  reduce 24
	','  reduce 24


state 55
	expression_component : literal_const .  (80)

	.  reduce 80


state 56
	expression : expression_component .  (63)

	.  reduce 63


state 57
	expression_component : funciton_invocation .  (82)

	.  reduce 82


state 58
	funct_decl : scalar_type ID '(' arguments . ')' SEMICOLON  (37)
	funct_defi : scalar_type ID '(' arguments . ')' compound  (39)

	')'  shift 86
	.  error


state 59
	identifier_list : ID array_int '=' . initial_array  (26)

	'{'  shift 87
	.  error

	initial_array  goto 88


state 60
	identifier : ID .  (17)
	identifier : ID . array_int  (18)
	identifier_list : identifier_list ',' ID . '=' expression  (23)
	identifier_list : identifier_list ',' ID . array_int '=' initial_array  (25)

	'['  shift 31
	'='  shift 89
	SEMICOLON  reduce 17
	','  reduce 17

	array_int  goto 90


state 61
	identifier_list : identifier_list ',' identifier .  (21)

	.  reduce 21


state 62
	const_list : ID '=' literal_const . ',' const_list  (29)
	const_list : ID '=' literal_const .  (30)

	','  shift 91
	SEMICOLON  reduce 30


state 63
	identifier : ID .  (17)
	identifier : ID . array_int  (18)

	'['  shift 31
	','  reduce 17
	')'  reduce 17

	array_int  goto 92


state 64
	argument : scalar_type identifier .  (45)

	.  reduce 45


state 65
	funct_decl : VOID ID '(' arguments ')' . SEMICOLON  (38)
	funct_defi : VOID ID '(' arguments ')' . compound  (40)

	SEMICOLON  shift 93
	'{'  shift 94
	.  error

	compound  goto 95


state 66
	nonempty_arguments : nonempty_arguments ',' . argument  (43)

	BOOL  shift 2
	FLOAT  shift 4
	DOUBLE  shift 5
	STRING  shift 6
	INT  shift 7
	.  error

	scalar_type  goto 39
	argument  goto 96


state 67
	array_int : '[' INTEGER ']' .  (19)
	array_int : '[' INTEGER ']' . array_int  (20)

	'['  shift 31
	SEMICOLON  reduce 19
	','  reduce 19
	'='  reduce 19
	')'  reduce 19

	array_int  goto 97


state 68
	funciton_invocation : ID '(' . expression_list ')' SEMICOLON  (100)
	expression_list : .  (103)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	','  reduce 103
	')'  reduce 103

	expression  goto 98
	expression_list  goto 99
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 69
	array_expre : array_expre . '[' expression ']'  (61)
	expression_component : ID array_expre .  (81)

	'['  shift 100
	SEMICOLON  reduce 81
	'*'  reduce 81
	'/'  reduce 81
	'%'  reduce 81
	'+'  reduce 81
	'-'  reduce 81
	'<'  reduce 81
	'>'  reduce 81
	LE  reduce 81
	EQ  reduce 81
	GE  reduce 81
	NE  reduce 81
	AND  reduce 81
	OR  reduce 81
	']'  reduce 81
	','  reduce 81
	'}'  reduce 81
	')'  reduce 81


state 70
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)
	expression : '-' expression .  (79)

	'+'  shift 76
	'-'  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	EQ  shift 81
	GE  shift 82
	NE  shift 83
	AND  shift 84
	OR  shift 85
	SEMICOLON  reduce 79
	'*'  reduce 79
	'/'  reduce 79
	'%'  reduce 79
	']'  reduce 79
	','  reduce 79
	'}'  reduce 79
	')'  reduce 79


state 71
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)
	expression : '!' expression .  (78)

	AND  shift 84
	OR  shift 85
	SEMICOLON  reduce 78
	'*'  reduce 78
	'/'  reduce 78
	'%'  reduce 78
	'+'  reduce 78
	'-'  reduce 78
	'<'  reduce 78
	'>'  reduce 78
	LE  reduce 78
	EQ  reduce 78
	GE  reduce 78
	NE  reduce 78
	']'  reduce 78
	','  reduce 78
	'}'  reduce 78
	')'  reduce 78


state 72
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)
	expression : '(' expression . ')'  (77)

	'*'  shift 73
	'/'  shift 74
	'%'  shift 75
	'+'  shift 76
	'-'  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	EQ  shift 81
	GE  shift 82
	NE  shift 83
	AND  shift 84
	OR  shift 85
	')'  shift 101
	.  error


state 73
	expression : expression '*' . expression  (65)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 102
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 74
	expression : expression '/' . expression  (66)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 103
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 75
	expression : expression '%' . expression  (67)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 104
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 76
	expression : expression '+' . expression  (68)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 105
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 77
	expression : expression '-' . expression  (64)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 106
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 78
	expression : expression '<' . expression  (71)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 107
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 79
	expression : expression '>' . expression  (72)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 108
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 80
	expression : expression LE . expression  (73)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 109
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 81
	expression : expression EQ . expression  (74)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 110
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 82
	expression : expression GE . expression  (75)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 111
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 83
	expression : expression NE . expression  (76)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 112
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 84
	expression : expression AND . expression  (69)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 113
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 85
	expression : expression OR . expression  (70)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 114
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 86
	funct_decl : scalar_type ID '(' arguments ')' . SEMICOLON  (37)
	funct_defi : scalar_type ID '(' arguments ')' . compound  (39)

	SEMICOLON  shift 115
	'{'  shift 94
	.  error

	compound  goto 116


state 87
	initial_array : '{' . expression_list '}'  (27)
	expression_list : .  (103)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	','  reduce 103
	'}'  reduce 103

	expression  goto 98
	expression_list  goto 117
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 88
	identifier_list : ID array_int '=' initial_array .  (26)

	.  reduce 26


state 89
	identifier_list : identifier_list ',' ID '=' . expression  (23)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 118
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 90
	identifier : ID array_int .  (18)
	identifier_list : identifier_list ',' ID array_int . '=' initial_array  (25)

	'='  shift 119
	SEMICOLON  reduce 18
	','  reduce 18


state 91
	const_list : ID '=' literal_const ',' . const_list  (29)

	ID  shift 26
	.  error

	const_list  goto 120


state 92
	identifier : ID array_int .  (18)

	.  reduce 18


state 93
	funct_decl : VOID ID '(' arguments ')' SEMICOLON .  (38)

	.  reduce 38


state 94
	compound : '{' . compound_list '}'  (53)
	compound_list : .  (57)

	ID  shift 121
	CONST  shift 1
	BOOL  shift 2
	FLOAT  shift 4
	DOUBLE  shift 5
	STRING  shift 6
	INT  shift 7
	READ  shift 122
	PRINT  shift 123
	WHILE  shift 124
	DO  shift 125
	IF  shift 126
	FOR  shift 127
	CONTINUE  shift 128
	BREAK  shift 129
	RETURN  shift 130
	'{'  shift 94
	'}'  reduce 57

	const_decl  goto 131
	var_decl  goto 132
	scalar_type  goto 133
	compound  goto 134
	statement  goto 135
	simple  goto 136
	conditional  goto 137
	while  goto 138
	for  goto 139
	jump  goto 140
	procedure_call  goto 141
	compound_list  goto 142
	funciton_invocation  goto 143


state 95
	funct_defi : VOID ID '(' arguments ')' compound .  (40)

	.  reduce 40


state 96
	nonempty_arguments : nonempty_arguments ',' argument .  (43)

	.  reduce 43


state 97
	array_int : '[' INTEGER ']' array_int .  (20)

	.  reduce 20


state 98
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)
	expression_list : expression .  (102)

	'*'  shift 73
	'/'  shift 74
	'%'  shift 75
	'+'  shift 76
	'-'  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	EQ  shift 81
	GE  shift 82
	NE  shift 83
	AND  shift 84
	OR  shift 85
	','  reduce 102
	'}'  reduce 102
	')'  reduce 102


state 99
	funciton_invocation : ID '(' expression_list . ')' SEMICOLON  (100)
	expression_list : expression_list . ',' expression  (101)

	','  shift 144
	')'  shift 145
	.  error


state 100
	array_expre : array_expre '[' . expression ']'  (61)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 146
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 101
	expression : '(' expression ')' .  (77)

	.  reduce 77


state 102
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression '*' expression .  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)

	'+'  shift 76
	'-'  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	EQ  shift 81
	GE  shift 82
	NE  shift 83
	AND  shift 84
	OR  shift 85
	SEMICOLON  reduce 65
	'*'  reduce 65
	'/'  reduce 65
	'%'  reduce 65
	']'  reduce 65
	','  reduce 65
	'}'  reduce 65
	')'  reduce 65


state 103
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression '/' expression .  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)

	'+'  shift 76
	'-'  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	EQ  shift 81
	GE  shift 82
	NE  shift 83
	AND  shift 84
	OR  shift 85
	SEMICOLON  reduce 66
	'*'  reduce 66
	'/'  reduce 66
	'%'  reduce 66
	']'  reduce 66
	','  reduce 66
	'}'  reduce 66
	')'  reduce 66


state 104
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression '%' expression .  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)

	'+'  shift 76
	'-'  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	EQ  shift 81
	GE  shift 82
	NE  shift 83
	AND  shift 84
	OR  shift 85
	SEMICOLON  reduce 67
	'*'  reduce 67
	'/'  reduce 67
	'%'  reduce 67
	']'  reduce 67
	','  reduce 67
	'}'  reduce 67
	')'  reduce 67


state 105
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression '+' expression .  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)

	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	EQ  shift 81
	GE  shift 82
	NE  shift 83
	AND  shift 84
	OR  shift 85
	SEMICOLON  reduce 68
	'*'  reduce 68
	'/'  reduce 68
	'%'  reduce 68
	'+'  reduce 68
	'-'  reduce 68
	']'  reduce 68
	','  reduce 68
	'}'  reduce 68
	')'  reduce 68


state 106
	expression : expression . '-' expression  (64)
	expression : expression '-' expression .  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)

	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	EQ  shift 81
	GE  shift 82
	NE  shift 83
	AND  shift 84
	OR  shift 85
	SEMICOLON  reduce 64
	'*'  reduce 64
	'/'  reduce 64
	'%'  reduce 64
	'+'  reduce 64
	'-'  reduce 64
	']'  reduce 64
	','  reduce 64
	'}'  reduce 64
	')'  reduce 64


state 107
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression '<' expression .  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)

	AND  shift 84
	OR  shift 85
	SEMICOLON  reduce 71
	'*'  reduce 71
	'/'  reduce 71
	'%'  reduce 71
	'+'  reduce 71
	'-'  reduce 71
	'<'  reduce 71
	'>'  reduce 71
	LE  reduce 71
	EQ  reduce 71
	GE  reduce 71
	NE  reduce 71
	']'  reduce 71
	','  reduce 71
	'}'  reduce 71
	')'  reduce 71


state 108
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression '>' expression .  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)

	AND  shift 84
	OR  shift 85
	SEMICOLON  reduce 72
	'*'  reduce 72
	'/'  reduce 72
	'%'  reduce 72
	'+'  reduce 72
	'-'  reduce 72
	'<'  reduce 72
	'>'  reduce 72
	LE  reduce 72
	EQ  reduce 72
	GE  reduce 72
	NE  reduce 72
	']'  reduce 72
	','  reduce 72
	'}'  reduce 72
	')'  reduce 72


state 109
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression LE expression .  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)

	AND  shift 84
	OR  shift 85
	SEMICOLON  reduce 73
	'*'  reduce 73
	'/'  reduce 73
	'%'  reduce 73
	'+'  reduce 73
	'-'  reduce 73
	'<'  reduce 73
	'>'  reduce 73
	LE  reduce 73
	EQ  reduce 73
	GE  reduce 73
	NE  reduce 73
	']'  reduce 73
	','  reduce 73
	'}'  reduce 73
	')'  reduce 73


state 110
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression EQ expression .  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)

	AND  shift 84
	OR  shift 85
	SEMICOLON  reduce 74
	'*'  reduce 74
	'/'  reduce 74
	'%'  reduce 74
	'+'  reduce 74
	'-'  reduce 74
	'<'  reduce 74
	'>'  reduce 74
	LE  reduce 74
	EQ  reduce 74
	GE  reduce 74
	NE  reduce 74
	']'  reduce 74
	','  reduce 74
	'}'  reduce 74
	')'  reduce 74


state 111
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression GE expression .  (75)
	expression : expression . NE expression  (76)

	AND  shift 84
	OR  shift 85
	SEMICOLON  reduce 75
	'*'  reduce 75
	'/'  reduce 75
	'%'  reduce 75
	'+'  reduce 75
	'-'  reduce 75
	'<'  reduce 75
	'>'  reduce 75
	LE  reduce 75
	EQ  reduce 75
	GE  reduce 75
	NE  reduce 75
	']'  reduce 75
	','  reduce 75
	'}'  reduce 75
	')'  reduce 75


state 112
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)
	expression : expression NE expression .  (76)

	AND  shift 84
	OR  shift 85
	SEMICOLON  reduce 76
	'*'  reduce 76
	'/'  reduce 76
	'%'  reduce 76
	'+'  reduce 76
	'-'  reduce 76
	'<'  reduce 76
	'>'  reduce 76
	LE  reduce 76
	EQ  reduce 76
	GE  reduce 76
	NE  reduce 76
	']'  reduce 76
	','  reduce 76
	'}'  reduce 76
	')'  reduce 76


state 113
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression AND expression .  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)

	OR  shift 85
	SEMICOLON  reduce 69
	'*'  reduce 69
	'/'  reduce 69
	'%'  reduce 69
	'+'  reduce 69
	'-'  reduce 69
	'<'  reduce 69
	'>'  reduce 69
	LE  reduce 69
	EQ  reduce 69
	GE  reduce 69
	NE  reduce 69
	AND  reduce 69
	']'  reduce 69
	','  reduce 69
	'}'  reduce 69
	')'  reduce 69


state 114
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression OR expression .  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)

	.  reduce 70


state 115
	funct_decl : scalar_type ID '(' arguments ')' SEMICOLON .  (37)

	.  reduce 37


state 116
	funct_defi : scalar_type ID '(' arguments ')' compound .  (39)

	.  reduce 39


state 117
	initial_array : '{' expression_list . '}'  (27)
	expression_list : expression_list . ',' expression  (101)

	','  shift 144
	'}'  shift 147
	.  error


state 118
	identifier_list : identifier_list ',' ID '=' expression .  (23)
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)

	'*'  shift 73
	'/'  shift 74
	'%'  shift 75
	'+'  shift 76
	'-'  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	EQ  shift 81
	GE  shift 82
	NE  shift 83
	AND  shift 84
	OR  shift 85
	SEMICOLON  reduce 23
	','  reduce 23


state 119
	identifier_list : identifier_list ',' ID array_int '=' . initial_array  (25)

	'{'  shift 87
	.  error

	initial_array  goto 148


state 120
	const_list : ID '=' literal_const ',' const_list .  (29)

	.  reduce 29


state 121
	simple : ID . array_expre '=' expression SEMICOLON  (58)
	funciton_invocation : ID . '(' expression_list ')' SEMICOLON  (100)
	array_expre : .  (62)

	'('  shift 68
	'['  reduce 62
	'='  reduce 62

	array_expre  goto 149


state 122
	simple : READ . ID array_expre  (60)

	ID  shift 150
	.  error


state 123
	simple : PRINT . expression SEMICOLON  (59)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 151
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 124
	while : WHILE . '(' boolean_expression ')' compound  (85)

	'('  shift 152
	.  error


state 125
	while : DO . compound WHILE '(' boolean_expression ')' SEMICOLON  (86)

	'{'  shift 94
	.  error

	compound  goto 153


state 126
	conditional : IF . '(' boolean_expression ')' compound ELSE compound  (83)
	conditional : IF . '(' boolean_expression ')' compound  (84)

	'('  shift 154
	.  error


state 127
	for : FOR . '(' initial_expression SEMICOLON control_expression SEMICOLON increment_expression ')'  (88)

	'('  shift 155
	.  error


state 128
	jump : CONTINUE . SEMICOLON  (98)

	SEMICOLON  shift 156
	.  error


state 129
	jump : BREAK . SEMICOLON  (97)

	SEMICOLON  shift 157
	.  error


state 130
	jump : RETURN . expression SEMICOLON  (96)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 158
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 131
	compound_list : const_decl . compound_list  (55)
	compound_list : .  (57)

	ID  shift 121
	CONST  shift 1
	BOOL  shift 2
	FLOAT  shift 4
	DOUBLE  shift 5
	STRING  shift 6
	INT  shift 7
	READ  shift 122
	PRINT  shift 123
	WHILE  shift 124
	DO  shift 125
	IF  shift 126
	FOR  shift 127
	CONTINUE  shift 128
	BREAK  shift 129
	RETURN  shift 130
	'{'  shift 94
	'}'  reduce 57

	const_decl  goto 131
	var_decl  goto 132
	scalar_type  goto 133
	compound  goto 134
	statement  goto 135
	simple  goto 136
	conditional  goto 137
	while  goto 138
	for  goto 139
	jump  goto 140
	procedure_call  goto 141
	compound_list  goto 159
	funciton_invocation  goto 143


state 132
	compound_list : var_decl . compound_list  (54)
	compound_list : .  (57)

	ID  shift 121
	CONST  shift 1
	BOOL  shift 2
	FLOAT  shift 4
	DOUBLE  shift 5
	STRING  shift 6
	INT  shift 7
	READ  shift 122
	PRINT  shift 123
	WHILE  shift 124
	DO  shift 125
	IF  shift 126
	FOR  shift 127
	CONTINUE  shift 128
	BREAK  shift 129
	RETURN  shift 130
	'{'  shift 94
	'}'  reduce 57

	const_decl  goto 131
	var_decl  goto 132
	scalar_type  goto 133
	compound  goto 134
	statement  goto 135
	simple  goto 136
	conditional  goto 137
	while  goto 138
	for  goto 139
	jump  goto 140
	procedure_call  goto 141
	compound_list  goto 160
	funciton_invocation  goto 143


state 133
	var_decl : scalar_type . identifier_list SEMICOLON  (11)

	ID  shift 161
	.  error

	identifier_list  goto 24
	identifier  goto 25


state 134
	statement : compound .  (46)

	.  reduce 46


state 135
	compound_list : statement . compound_list  (56)
	compound_list : .  (57)

	ID  shift 121
	CONST  shift 1
	BOOL  shift 2
	FLOAT  shift 4
	DOUBLE  shift 5
	STRING  shift 6
	INT  shift 7
	READ  shift 122
	PRINT  shift 123
	WHILE  shift 124
	DO  shift 125
	IF  shift 126
	FOR  shift 127
	CONTINUE  shift 128
	BREAK  shift 129
	RETURN  shift 130
	'{'  shift 94
	'}'  reduce 57

	const_decl  goto 131
	var_decl  goto 132
	scalar_type  goto 133
	compound  goto 134
	statement  goto 135
	simple  goto 136
	conditional  goto 137
	while  goto 138
	for  goto 139
	jump  goto 140
	procedure_call  goto 141
	compound_list  goto 162
	funciton_invocation  goto 143


state 136
	statement : simple .  (47)

	.  reduce 47


state 137
	statement : conditional .  (48)

	.  reduce 48


state 138
	statement : while .  (49)

	.  reduce 49


state 139
	statement : for .  (50)

	.  reduce 50


state 140
	statement : jump .  (51)

	.  reduce 51


state 141
	statement : procedure_call .  (52)

	.  reduce 52


state 142
	compound : '{' compound_list . '}'  (53)

	'}'  shift 163
	.  error


state 143
	procedure_call : funciton_invocation .  (99)

	.  reduce 99


state 144
	expression_list : expression_list ',' . expression  (101)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 164
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 145
	funciton_invocation : ID '(' expression_list ')' . SEMICOLON  (100)

	SEMICOLON  shift 165
	.  error


state 146
	array_expre : array_expre '[' expression . ']'  (61)
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)

	'*'  shift 73
	'/'  shift 74
	'%'  shift 75
	'+'  shift 76
	'-'  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	EQ  shift 81
	GE  shift 82
	NE  shift 83
	AND  shift 84
	OR  shift 85
	']'  shift 166
	.  error


state 147
	initial_array : '{' expression_list '}' .  (27)

	.  reduce 27


state 148
	identifier_list : identifier_list ',' ID array_int '=' initial_array .  (25)

	.  reduce 25


state 149
	simple : ID array_expre . '=' expression SEMICOLON  (58)
	array_expre : array_expre . '[' expression ']'  (61)

	'['  shift 100
	'='  shift 167
	.  error


state 150
	simple : READ ID . array_expre  (60)
	array_expre : .  (62)

	.  reduce 62

	array_expre  goto 168


state 151
	simple : PRINT expression . SEMICOLON  (59)
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)

	SEMICOLON  shift 169
	'*'  shift 73
	'/'  shift 74
	'%'  shift 75
	'+'  shift 76
	'-'  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	EQ  shift 81
	GE  shift 82
	NE  shift 83
	AND  shift 84
	OR  shift 85
	.  error


state 152
	while : WHILE '(' . boolean_expression ')' compound  (85)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 170
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57
	boolean_expression  goto 171


state 153
	while : DO compound . WHILE '(' boolean_expression ')' SEMICOLON  (86)

	WHILE  shift 172
	.  error


state 154
	conditional : IF '(' . boolean_expression ')' compound ELSE compound  (83)
	conditional : IF '(' . boolean_expression ')' compound  (84)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 170
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57
	boolean_expression  goto 173


state 155
	for : FOR '(' . initial_expression SEMICOLON control_expression SEMICOLON increment_expression ')'  (88)
	initial_expression : .  (91)

	ID  shift 174
	BOOL  shift 2
	FLOAT  shift 4
	DOUBLE  shift 5
	STRING  shift 6
	INT  shift 7
	SEMICOLON  reduce 91

	scalar_type  goto 175
	initial_expression  goto 176


state 156
	jump : CONTINUE SEMICOLON .  (98)

	.  reduce 98


state 157
	jump : BREAK SEMICOLON .  (97)

	.  reduce 97


state 158
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)
	jump : RETURN expression . SEMICOLON  (96)

	SEMICOLON  shift 177
	'*'  shift 73
	'/'  shift 74
	'%'  shift 75
	'+'  shift 76
	'-'  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	EQ  shift 81
	GE  shift 82
	NE  shift 83
	AND  shift 84
	OR  shift 85
	.  error


state 159
	compound_list : const_decl compound_list .  (55)

	.  reduce 55


state 160
	compound_list : var_decl compound_list .  (54)

	.  reduce 54


state 161
	identifier : ID .  (17)
	identifier : ID . array_int  (18)
	identifier_list : ID . '=' expression  (24)
	identifier_list : ID . array_int '=' initial_array  (26)

	'['  shift 31
	'='  shift 32
	SEMICOLON  reduce 17
	','  reduce 17

	array_int  goto 34


state 162
	compound_list : statement compound_list .  (56)

	.  reduce 56


state 163
	compound : '{' compound_list '}' .  (53)

	.  reduce 53


state 164
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)
	expression_list : expression_list ',' expression .  (101)

	'*'  shift 73
	'/'  shift 74
	'%'  shift 75
	'+'  shift 76
	'-'  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	EQ  shift 81
	GE  shift 82
	NE  shift 83
	AND  shift 84
	OR  shift 85
	','  reduce 101
	'}'  reduce 101
	')'  reduce 101


state 165
	funciton_invocation : ID '(' expression_list ')' SEMICOLON .  (100)

	.  reduce 100


state 166
	array_expre : array_expre '[' expression ']' .  (61)

	.  reduce 61


state 167
	simple : ID array_expre '=' . expression SEMICOLON  (58)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 178
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 168
	simple : READ ID array_expre .  (60)
	array_expre : array_expre . '[' expression ']'  (61)

	'['  shift 100
	ID  reduce 60
	CONST  reduce 60
	BOOL  reduce 60
	FLOAT  reduce 60
	DOUBLE  reduce 60
	STRING  reduce 60
	INT  reduce 60
	READ  reduce 60
	PRINT  reduce 60
	WHILE  reduce 60
	DO  reduce 60
	IF  reduce 60
	FOR  reduce 60
	CONTINUE  reduce 60
	BREAK  reduce 60
	RETURN  reduce 60
	'{'  reduce 60
	'}'  reduce 60


state 169
	simple : PRINT expression SEMICOLON .  (59)

	.  reduce 59


state 170
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)
	boolean_expression : expression .  (87)

	'*'  shift 73
	'/'  shift 74
	'%'  shift 75
	'+'  shift 76
	'-'  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	EQ  shift 81
	GE  shift 82
	NE  shift 83
	AND  shift 84
	OR  shift 85
	')'  reduce 87


state 171
	while : WHILE '(' boolean_expression . ')' compound  (85)

	')'  shift 179
	.  error


state 172
	while : DO compound WHILE . '(' boolean_expression ')' SEMICOLON  (86)

	'('  shift 180
	.  error


state 173
	conditional : IF '(' boolean_expression . ')' compound ELSE compound  (83)
	conditional : IF '(' boolean_expression . ')' compound  (84)

	')'  shift 181
	.  error


state 174
	initial_expression : ID . '=' expression  (89)

	'='  shift 182
	.  error


state 175
	initial_expression : scalar_type . ID '=' expression  (90)

	ID  shift 183
	.  error


state 176
	for : FOR '(' initial_expression . SEMICOLON control_expression SEMICOLON increment_expression ')'  (88)

	SEMICOLON  shift 184
	.  error


state 177
	jump : RETURN expression SEMICOLON .  (96)

	.  reduce 96


state 178
	simple : ID array_expre '=' expression . SEMICOLON  (58)
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)

	SEMICOLON  shift 185
	'*'  shift 73
	'/'  shift 74
	'%'  shift 75
	'+'  shift 76
	'-'  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	EQ  shift 81
	GE  shift 82
	NE  shift 83
	AND  shift 84
	OR  shift 85
	.  error


state 179
	while : WHILE '(' boolean_expression ')' . compound  (85)

	'{'  shift 94
	.  error

	compound  goto 186


state 180
	while : DO compound WHILE '(' . boolean_expression ')' SEMICOLON  (86)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 170
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57
	boolean_expression  goto 187


state 181
	conditional : IF '(' boolean_expression ')' . compound ELSE compound  (83)
	conditional : IF '(' boolean_expression ')' . compound  (84)

	'{'  shift 94
	.  error

	compound  goto 188


state 182
	initial_expression : ID '=' . expression  (89)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 189
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 183
	initial_expression : scalar_type ID . '=' expression  (90)

	'='  shift 190
	.  error


state 184
	for : FOR '(' initial_expression SEMICOLON . control_expression SEMICOLON increment_expression ')'  (88)
	control_expression : .  (93)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	SEMICOLON  reduce 93

	expression  goto 191
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57
	control_expression  goto 192


state 185
	simple : ID array_expre '=' expression SEMICOLON .  (58)

	.  reduce 58


state 186
	while : WHILE '(' boolean_expression ')' compound .  (85)

	.  reduce 85


state 187
	while : DO compound WHILE '(' boolean_expression . ')' SEMICOLON  (86)

	')'  shift 193
	.  error


state 188
	conditional : IF '(' boolean_expression ')' compound . ELSE compound  (83)
	conditional : IF '(' boolean_expression ')' compound .  (84)

	ELSE  shift 194
	ID  reduce 84
	CONST  reduce 84
	BOOL  reduce 84
	FLOAT  reduce 84
	DOUBLE  reduce 84
	STRING  reduce 84
	INT  reduce 84
	READ  reduce 84
	PRINT  reduce 84
	WHILE  reduce 84
	DO  reduce 84
	IF  reduce 84
	FOR  reduce 84
	CONTINUE  reduce 84
	BREAK  reduce 84
	RETURN  reduce 84
	'{'  reduce 84
	'}'  reduce 84


state 189
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)
	initial_expression : ID '=' expression .  (89)

	'*'  shift 73
	'/'  shift 74
	'%'  shift 75
	'+'  shift 76
	'-'  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	EQ  shift 81
	GE  shift 82
	NE  shift 83
	AND  shift 84
	OR  shift 85
	SEMICOLON  reduce 89


state 190
	initial_expression : scalar_type ID '=' . expression  (90)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 195
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 191
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)
	control_expression : expression .  (92)

	'*'  shift 73
	'/'  shift 74
	'%'  shift 75
	'+'  shift 76
	'-'  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	EQ  shift 81
	GE  shift 82
	NE  shift 83
	AND  shift 84
	OR  shift 85
	SEMICOLON  reduce 92


state 192
	for : FOR '(' initial_expression SEMICOLON control_expression . SEMICOLON increment_expression ')'  (88)

	SEMICOLON  shift 196
	.  error


state 193
	while : DO compound WHILE '(' boolean_expression ')' . SEMICOLON  (86)

	SEMICOLON  shift 197
	.  error


state 194
	conditional : IF '(' boolean_expression ')' compound ELSE . compound  (83)

	'{'  shift 94
	.  error

	compound  goto 198


state 195
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)
	initial_expression : scalar_type ID '=' expression .  (90)

	'*'  shift 73
	'/'  shift 74
	'%'  shift 75
	'+'  shift 76
	'-'  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	EQ  shift 81
	GE  shift 82
	NE  shift 83
	AND  shift 84
	OR  shift 85
	SEMICOLON  reduce 90


state 196
	for : FOR '(' initial_expression SEMICOLON control_expression SEMICOLON . increment_expression ')'  (88)
	increment_expression : .  (95)

	ID  shift 199
	')'  reduce 95

	increment_expression  goto 200


state 197
	while : DO compound WHILE '(' boolean_expression ')' SEMICOLON .  (86)

	.  reduce 86


state 198
	conditional : IF '(' boolean_expression ')' compound ELSE compound .  (83)

	.  reduce 83


state 199
	increment_expression : ID . '=' expression  (94)

	'='  shift 201
	.  error


state 200
	for : FOR '(' initial_expression SEMICOLON control_expression SEMICOLON increment_expression . ')'  (88)

	')'  shift 202
	.  error


state 201
	increment_expression : ID '=' . expression  (94)

	ID  shift 44
	SCIENTIFIC  shift 45
	INTEGER  shift 46
	FLOATCONST  shift 47
	STRINGCONST  shift 48
	TRUE  shift 49
	FALSE  shift 50
	'-'  shift 51
	'!'  shift 52
	'('  shift 53
	.  error

	expression  goto 203
	literal_const  goto 55
	expression_component  goto 56
	funciton_invocation  goto 57


state 202
	for : FOR '(' initial_expression SEMICOLON control_expression SEMICOLON increment_expression ')' .  (88)

	.  reduce 88


state 203
	expression : expression . '-' expression  (64)
	expression : expression . '*' expression  (65)
	expression : expression . '/' expression  (66)
	expression : expression . '%' expression  (67)
	expression : expression . '+' expression  (68)
	expression : expression . AND expression  (69)
	expression : expression . OR expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . LE expression  (73)
	expression : expression . EQ expression  (74)
	expression : expression . GE expression  (75)
	expression : expression . NE expression  (76)
	increment_expression : ID '=' expression .  (94)

	'*'  shift 73
	'/'  shift 74
	'%'  shift 75
	'+'  shift 76
	'-'  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	EQ  shift 81
	GE  shift 82
	NE  shift 83
	AND  shift 84
	OR  shift 85
	')'  reduce 94


51 terminals, 38 nonterminals
104 grammar rules, 204 states
